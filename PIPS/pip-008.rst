PIP-8: Subdomain Records
======================

.. contents:: Table of Contents
   :local:

Overview
########

Blob owners may partition their blob space into named segments and delegate ownership to a different ``secp256k1`` key pair. This PIP defines a record type ``SUB`` for partitioning 
blobs into named sub-segments called "subdomains." Note that these subdomains are 
currently distinct from any subdomains that may exist on the blob's Handshake name - the existence 
of a subdomain blob does not imply the existence of any additional DNS records defined 
on the TLD.

Subdomain Records Layout
########################

Blobs that contain subdomains MUST start with the following fields:

#. ``magic_value``: ``SUB``
#. ``subdomain_records_len``: ``uint32`` 
#. ``subdomain_records``: ``[]SubdomainRecord`` 
   
The ``magic_value`` field allows applications to deterministically identify how to decode a blob.

The ``subdomain_records_len`` field represents total of subdomain records inside a blob.

All subdomain records MUST be stored inside ``subdomain_records`` in partition orders -- subdomain records stored outside of ``subdomain_records`` MUST be ignored.

This is considered part of the blob owner's (tld) partition for blob merkelization in `PIP-3`_.

Subdomain Record
#################

Subdomain Records defines the human-readable names
used to address each blob partition, and a ``secp256k1`` public key for
authenticating the messages contained within the partition. 

Subdomain Records are formatted as follows:

Record Type
***********
#. ``record_type_id``: ``SUB``
#. ``record_version``: ``1``
#. ``record_subtype``: ``0000``

Record Fields
*************
#. ``subdomain``: ``[32]byte``
#. ``public_key``: ``[33]byte``
#. ``last_byte_offset``: ``uint32``

The ``subdomain`` field represents the name of the subdomain. Subdomains MUST have at
least one character, and be encoded as valid UTF-8.

The ``public_key`` field contains a public key used to authenticate message
associated with the Subdomain Record as described in `PIP-4`_. It MUST be present and set to a valid ``secp256k1`` compressed public key.

The ``last_byte_offset`` field reprsents the index of the last byte of the partition. Starting offset is either ``0`` for the first subdomain record, or derived by adding ``1`` to the ``last_byte_offset`` of the previous subdomain record. 

All remaining bytes belong to the blob owner's partition for blob merkelization in `PIP-3`_.


Authors
#######

- `mslipper`_
- `chikeichan`_

.. _mslipper: https://github.com/mslipper
.. _chikeichan: https://github.com/chikeichan
.. _PIP-3: ./pip-003.rst
.. _PIP-4: ./pip-004.rst
.. _PIP-8: ./pip-008.rst
