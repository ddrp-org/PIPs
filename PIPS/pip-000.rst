PIP-0: Meta
===========

.. contents:: Table of Contents
   :local:

Overview
########

DDRP is an experimental protocol for storing and synchronizing small amounts of
data over a global, decentralized gossip network.

Blobs
*****

DDRP stores data in fixed-length files called "blobs." Blobs are addressed by
Handshake names in a 1:1 mapping. To assert ownership over a blob, Handshake
nameholders generate a public/private key pair and insert the public key into
their name's TXT records. They can then authenticate blob updates using their
private key.

In contrast to other decentralized storage protocols, DDRP nodes store all data
on the network locally. This creates what these documents refer to as the
"global view," and allows for rich applications to be built on top of DDRP that
query local state rather than the network.

See `PIP-3`_ for more information on blob structure and blob ownership.

Records
*******

Records are data schema used as premitive data type to facilitate different 
use cases. They can reference each other to form relationships, similar to 
a row in relational database. 

See `PIP-Y`_ for social records supporting different social networking use cases.

Subdomains
**********

Blob owners can partition their blob space and delegate write access to anyone. Subdomain 
records are stored inside each blob with a mapping of subdomain name and public key, 
of which they can use to authenticate updates to their specific partition.

See `PIP-Y`_ for partition records supporting subdomain use cases.

Network Topology
****************

DDRP nodes are arranged in a gossip network similar to Bitcoin. Nodes discover
one another by querying their peers. Bootstrap peers can be read either from a
configuration file or by querying a set of DNS seed domains.

See `PIP-5`_ for more information on DDRP's peer protocol, and `PIP-2`_ for
more information on how nodes connect to each other.

About the PIPs
##############

PIP stands for Protocol Improvement Proposal. A PIP is intended as the primary way for the community to propose new features and technical specification of that feature. All PIPs should follow the following process:

  #. Draft: Start an issue with the label ``draft`` as a starting point of discussion.
  #. Review: Once the PIP has reached enough technical specificity and is ready for review by a wide audience, submit a pull request with the label ``rfc``. 
  #. Final: A PIP in review is considered to be final when the pull request is merged.
     
The process above is designed to be minimalistic at first and should evolve with the dev community of DDRP.

Acknowledgements
################

DDRP was inspired by a protocol originally designed by Joseph Poon.

.. _PIP-2: ./pip-002.rst
.. _PIP-3: ./pip-003.rst
.. _PIP-5: ./pip-005.rst
.. _reference implementation: https://github.com/ddrp-org/ddrp
